@import "mixins";
@import "helpers";
@import "fonts";
@import "conf";

.text-shadow(@string: 0 1px 3px rgba(0, 0, 0, 0.25)) {
	text-shadow: @string;
}

.box-shadow(@string) {
	-webkit-box-shadow: @string;
	-moz-box-shadow: @string;
	box-shadow: @string;
}

.drop-shadow(@x: 0, @y: 1px, @blur: 2px, @spread: 0, @alpha: 0.25) {
	-webkit-box-shadow: @x @y @blur @spread rgba(0, 0, 0, @alpha);
	-moz-box-shadow: @x @y @blur @spread rgba(0, 0, 0, @alpha);
	box-shadow: @x @y @blur @spread rgba(0, 0, 0, @alpha);
}

.inner-shadow(@x: 0, @y: 1px, @blur: 2px, @spread: 0, @alpha: 0.25) {
	-webkit-box-shadow: inset @x @y @blur @spread rgba(0, 0, 0, @alpha);
	-moz-box-shadow: inset @x @y @blur @spread rgba(0, 0, 0, @alpha);
	box-shadow: inset @x @y @blur @spread rgba(0, 0, 0, @alpha);
}

.box-sizing(@type: border-box) {
	-webkit-box-sizing: @type;
	-moz-box-sizing: @type;
	box-sizing: @type;
}

.border-radius(@radius: 5px) {
	-webkit-border-radius: @radius;
	-moz-border-radius: @radius;
	border-radius: @radius;

	-moz-background-clip: padding;
	-webkit-background-clip: padding-box;
	background-clip: padding-box;
}

.border-radiuses(@topright: 0, @bottomright: 0, @bottomleft: 0, @topleft: 0) {
	-webkit-border-top-right-radius: @topright;
	-webkit-border-bottom-right-radius: @bottomright;
	-webkit-border-bottom-left-radius: @bottomleft;
	-webkit-border-top-left-radius: @topleft;

	-moz-border-radius-topright: @topright;
	-moz-border-radius-bottomright: @bottomright;
	-moz-border-radius-bottomleft: @bottomleft;
	-moz-border-radius-topleft: @topleft;

	border-top-right-radius: @topright;
	border-bottom-right-radius: @bottomright;
	border-bottom-left-radius: @bottomleft;
	border-top-left-radius: @topleft;

	-moz-background-clip: padding;
	-webkit-background-clip: padding-box;
	background-clip: padding-box;
}

.opacity(@opacity: 0.5) {
	@opacity_ms: @opacity * 100;
	-webkit-opacity: @opacity;
	-moz-opacity: @opacity;
	opacity: @opacity;
	filter: ~"alpha(opacity=@{opacity_ms})";
	-ms-filter: ~'"alpha(opacity=@{opacity_ms})"';
}

.gradient(@startColor: #eee, @endColor: white) {
	background-color: @startColor;
	background: -webkit-gradient(linear, left top, left bottom, from(@startColor), to(@endColor));
	background: -webkit-linear-gradient(top, @startColor, @endColor);
	background: -moz-linear-gradient(top, @startColor, @endColor);
	background: -ms-linear-gradient(top, @startColor, @endColor);
	background: -o-linear-gradient(top, @startColor, @endColor);
	filter: ~"progid:DXImageTransform.Microsoft.gradient(startColorstr='@{startColor}', endColorstr='@{endColor}')";
}

.horizontal-gradient(@startColor: #eee, @endColor: white) {
	background-color: @startColor;
	background-image: -webkit-gradient(linear, left top, right top, from(@startColor), to(@endColor));
	background-image: -webkit-linear-gradient(left, @startColor, @endColor);
	background-image: -moz-linear-gradient(left, @startColor, @endColor);
	background-image: -ms-linear-gradient(left, @startColor, @endColor);
	background-image: -o-linear-gradient(left, @startColor, @endColor);
	filter: progid:DXImageTransform.Microsoft.gradient(startColorstr=@startColor, endColorstr=@endColor, GradientType=1);
}

.animation(@name, @duration: 300ms, @delay: 0, @ease: ease) {
	-webkit-animation: @name @duration @delay @ease;
	-moz-animation: @name @duration @delay @ease;
	-ms-animation: @name @duration @delay @ease;
}

.animation-scale(@name, @duration, @count, @direction, @scale) {
	-moz-animation-name: @name;
	-moz-animation-duration: @duration;
	-moz-animation-iteration-count: @count;
	-moz-animation-direction: @direction;
	-moz-transform: @scale;

	-webkit-animation-name: @name;
	-webkit-animation-duration: @duration;
	-webkit-animation-iteration-count: @count;
	-webkit-animation-direction: @direction;
	-webkit-transform: @scale;

	-o-animation-name: @name;
	-o-animation-duration: @duration;
	-o-animation-iteration-count: @count;
	-o-animation-direction: @direction;
	-o-transform: @scale;

	-ms-animation-name: @name;
	-ms-animation-duration: @duration;
	-ms-animation-iteration-count: @count;
	-ms-animation-direction: @direction;
	-ms-transform: @scale;

	animation-name: @name;
	animation-duration: @duration;
	animation-iteration-count: @count;
	animation-direction: @direction;
	transform: @scale;
}

.animation-delay(@delay) {
	-moz-animation-delay: @delay;
	-webkit-animation-delay: @delay;
	-o-animation-delay: @delay;
	-ms-animation-delay: @delay;
	animation-delay: @delay;
}

.transition(@transition) {
	-webkit-transition: @transition;
	-moz-transition: @transition;
	-ms-transition: @transition;
	-o-transition: @transition;
}

.transform(@string) {
	-webkit-transform: @string;
	-moz-transform: @string;
	-ms-transform: @string;
	-o-transform: @string;
}

.scale(@factor) {
	-webkit-transform: scale(@factor);
	-moz-transform: scale(@factor);
	-ms-transform: scale(@factor);
	-o-transform: scale(@factor);
}

.rotate(@deg) {
	-webkit-transform: rotate(@deg);
	-moz-transform: rotate(@deg);
	-ms-transform: rotate(@deg);
	-o-transform: rotate(@deg);
}

.skew(@deg, @deg2) {
	-webkit-transform: skew(@deg, @deg2);
	-moz-transform: skew(@deg, @deg2);
	-ms-transform: skew(@deg, @deg2);
	-o-transform: skew(@deg, @deg2);
}

.translate(@x, @y: 0) {
	-webkit-transform: translate(@x, @y);
	-moz-transform: translate(@x, @y);
	-ms-transform: translate(@x, @y);
	-o-transform: translate(@x, @y);
}

.translate3d(@x, @y: 0, @z: 0) {
	-webkit-transform: translate3d(@x, @y, @z);
	-moz-transform: translate3d(@x, @y, @z);
	-ms-transform: translate3d(@x, @y, @z);
	-o-transform: translate3d(@x, @y, @z);
}

.perspective(@value: 1000) {
	-webkit-perspective: @value;
	-moz-perspective: @value;
	-ms-perspective: @value;
	perspective: @value;
}

.transform-origin(@x: center, @y: center) {
	-webkit-transform-origin: @x @y;
	-moz-transform-origin: @x @y;
	-ms-transform-origin: @x @y;
	-o-transform-origin: @x @y;
}

.pos(@pos) {
	background-position: @pos;
}

.font(@family, @name) {
	font-family: "@{family}";
	font-style: normal;
	font-weight: normal;
	src: url('@{font_path}/@{name}.eot');
	src: local('O'), url('@{font_path}/@{name}.woff') format('woff'), url('@{font_path}/@{name}.ttf') format('truetype'), url('@{font_path}/@{name}.svg') format('svg');
}

.div(@width: 100%, @height: auto, @position: relative, @display: block, @margin: 0) {
	width: @width;
	height: @height;
	position: @position;
	display: @display;
	margin: @margin;
}

.img(@img_path, @repeat: no-repeat) {
	background-image: url(@img_path);
	background-repeat: @repeat;
}

.retina-image(@file, @type, @repeat, @width, @height, @posx: 0, @posy: 0) {
	background-image: url('@{file}.@{type}');
	background-repeat: @repeat;
	background-position: @posx @posy;

	@media print, screen,
	(-webkit-min-device-pixel-ratio: 1.25),
	(-o-min-device-pixel-ratio: 1.25/1),
		/*(~`"-o-min-device-pixel-ratio: 1.25/1"`),*/
	(min--moz-device-pixel-ratio: 1.25),
	(-moz-min-device-pixel-ratio: 1.25),
	(-ms-min-device-pixel-ratio: 1.25),
	(min-device-pixel-ratio: 1.25),
	(min-resolution: 120dpi),
	(min-resolution: 1.25dppx) {
		background-size: @width @height;
		background-image: url('@{file}@2x.@{type}');
		background-position: @posx * 2 @posy * 2;
	}
}
